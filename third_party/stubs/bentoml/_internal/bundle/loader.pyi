from bentoml.exceptions import BentoMLException as BentoMLException
from bentoml.saved_bundle.config import SavedBundleConfig as SavedBundleConfig
from bentoml.saved_bundle.pip_pkg import ZIPIMPORT_DIR as ZIPIMPORT_DIR
from bentoml.utils.gcs import is_gcs_url as is_gcs_url
from bentoml.utils.s3 import is_s3_url as is_s3_url
from bentoml.yatai.proto.repository_pb2 import BentoServiceMetadata as BentoServiceMetadata
from pathlib import PurePosixPath as PurePosixPath
from typing import Any

logger: Any

def resolve_remote_bundle(func): ...
def load_saved_bundle_config(bundle_path) -> SavedBundleConfig: ...
def load_bento_service_metadata(bundle_path: str) -> BentoServiceMetadata: ...
def load_bento_service_class(bundle_path): ...
def safe_retrieve(bundle_path: str, target_dir: str): ...
def load_from_dir(bundle_path): ...
def load_bento_service_api(bundle_path, api_name: Any | None = ...): ...
