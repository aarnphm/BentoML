from bentoml.configuration.containers import BentoMLContainer as BentoMLContainer
from bentoml.exceptions import BentoMLConfigException as BentoMLConfigException
from bentoml.utils import dump_to_yaml_str as dump_to_yaml_str
from bentoml.utils.ruamel_yaml import YAML as YAML
from typing import Any

BENTOML_CONFIG_YAML_TEMPLATE: str
logger: Any
DEFAULT_MAX_LATENCY: int
DEFAULT_MAX_BATCH_SIZE: int
PYTHON_VERSION: Any

class SavedBundleConfig:
    kind: Any
    config: Any
    def __init__(self, bento_service: Any | None = ..., kind: str = ..., bentoml_deployment_version: str = ...) -> None: ...
    def write_to_path(self, path, filename: str = ...): ...
    @classmethod
    def load(cls, filepath): ...
    def get_bento_service_metadata_pb(self): ...
    def __getitem__(self, item): ...
    def __setitem__(self, key, value) -> None: ...
    def __contains__(self, item): ...
