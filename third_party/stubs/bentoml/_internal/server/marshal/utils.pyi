from bentoml.types import HTTPRequest as HTTPRequest, HTTPResponse as HTTPResponse
from typing import Sequence

MARSHAL_REQUEST_HEADER: str

class PlasmaDataLoader:
    @classmethod
    def get_plasma(cls): ...
    @classmethod
    def merge_requests(cls, reqs) -> bytes: ...
    @classmethod
    def split_responses(cls, raw: bytes): ...
    @classmethod
    def split_requests(cls, raw: bytes): ...
    @classmethod
    def merge_responses(cls, resps) -> bytes: ...

class PickleDataLoader:
    @classmethod
    def merge_requests(cls, reqs: Sequence[HTTPRequest]) -> bytes: ...
    @classmethod
    def split_requests(cls, raw: bytes) -> Sequence[HTTPRequest]: ...
    @classmethod
    def merge_responses(cls, resps: Sequence[HTTPResponse]) -> bytes: ...
    @classmethod
    def split_responses(cls, raw: bytes) -> Sequence[HTTPResponse]: ...
DataLoader = PickleDataLoader
