from bentoml.exceptions import InvalidArgument as InvalidArgument, MissingDependencyException as MissingDependencyException
from bentoml.service.artifacts import BentoServiceArtifact as BentoServiceArtifact
from bentoml.service.env import BentoServiceEnv as BentoServiceEnv
from bentoml.utils import cloudpickle as cloudpickle
from typing import Any

logger: Any

class PytorchModelArtifact(BentoServiceArtifact):
    def __init__(self, name, file_extension: str = ...) -> None: ...
    def pack(self, model, metadata: Any | None = ...): ...
    def load(self, path): ...
    def set_dependencies(self, env: BentoServiceEnv): ...
    def get(self): ...
    def save(self, dst): ...

class PytorchLightningModelArtifact(BentoServiceArtifact):
    def __init__(self, name) -> None: ...
    def pack(self, path_or_model, metadata: Any | None = ...): ...
    def load(self, path) -> None: ...
    def set_dependencies(self, env: BentoServiceEnv): ...
    def get(self): ...
    def save(self, dst) -> None: ...
